<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>White-Themed Vintage Photobooth</title>
    <style>
        body {
            text-align: center;
            background: #ffffff;
            font-family: 'Courier New', Courier, monospace;
            color: black;
        }
        .container {
            margin-top: 30px;
        }
        video, canvas {
            border: 5px solid black;
            width: 80%;
            max-width: 400px;
        }
        .photo-strip {
            display: flex;
            flex-direction: column;
            align-items: center;
            background: #eee;
            border: 10px solid black;
            padding: 10px;
            width: 220px;
        }
        .photo-strip canvas {
            width: 200px;
            height: 250px;
            background: white;
            margin: 5px 0;
        }
        button {
            background: black;
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 18px;
            margin: 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Vintage Photobooth</h1>
        <video id="video" autoplay playsinline></video>
        <div class="photo-strip">
            <canvas id="canvas1"></canvas>
            <canvas id="canvas2"></canvas>
            <canvas id="canvas3"></canvas>
        </div>
        <button id="snap">Take Photos</button>
        <button id="download" style="display:none;">Download Strip</button>
    </div>
    <script>
        const video = document.getElementById('video');
        const canvases = [
            document.getElementById('canvas1'),
            document.getElementById('canvas2'),
            document.getElementById('canvas3')
        ];
        const snap = document.getElementById('snap');
        const download = document.getElementById('download');
        
        navigator.mediaDevices.getUserMedia({ video: { facingMode: "user" } })
            .then(stream => { video.srcObject = stream; })
            .catch(err => {
                alert("Camera access denied. Please allow camera permissions.");
            });
        
        snap.addEventListener('click', () => {
            if (!video.srcObject) {
                alert("Camera not available.");
                return;
            }
            canvases.forEach((canvas, index) => {
                setTimeout(() => {
                    canvas.width = 200;
                    canvas.height = 250;
                    const ctx = canvas.getContext('2d');
                    ctx.drawImage(video, 0, 0, 200, 250);
                }, index * 1000);
            });
            setTimeout(() => { download.style.display = 'inline'; }, 3000);
        });
        
        download.addEventListener('click', () => {
            const strip = document.createElement('canvas');
            strip.width = 200;
            strip.height = 750;
            const ctx = strip.getContext('2d');
            canvases.forEach((canvas, index) => {
                ctx.drawImage(canvas, 0, index * 250, 200, 250);
            });
            const link = document.createElement('a');
            link.href = strip.toDataURL('image/png');
            link.download = 'photo-strip.png';
            link.click();
        });
    </script>
</body>
</html>
